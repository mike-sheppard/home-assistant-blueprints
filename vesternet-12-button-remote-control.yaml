blueprint:
  name: Vesternet 12 Button Remote Control
  description: 'All oval buttons (1-4, S1 and S2) can be connected to any action. The main on (1) and off (0) buttons will activate all on/off buttons 1-4 together.
    Supports: short button clicks and long button presses (over 4 seconds).

    Very minor tweak of the original Blueprint by Bart Eversdijk: https://github.com/Bekkie/ha-blueprints/blob/main/automation/robb-smarrt-4-ch-remote-ROB_200-024-0.yaml
    Only change is model: ZGRC-KEY-013
    '
  domain: automation
  author: Mike Sheppard (Original by Bart Eversdijk)
  source_url: https://github.com/mike-sheppard/home-assistant-blueprints/blob/main/vesternet-12-button-remote-control.yml
  input:
    remote:
      name: Remote
      description: Switch remote to use
      selector:
        device:
          integration: zha
          model: ZGRC-KEY-013

    on_button_1_short:
      name: On button 1 - short
      default: []
      selector:
        action: {}
    off_button_1_short:
      name: Off button 1 - short
      default: []
      selector:
        action: {}
    on_button_1_long:
      name: On button 1 - long press
      default: []
      selector:
        action: {}
    off_button_1_long:
      name: Off button 1 - long press
      default: []
      selector:
        action: {}
    on_button_2_short:
      name: On button 2 - short
      default: []
      selector:
        action: {}
    off_button_2_short:
      name: Off button 2 - short
      default: []
      selector:
        action: {}
    on_button_2_long:
      name: On button 2 - long press
      default: []
      selector:
        action: {}
    off_button_2_long:
      name: Off button 2 - long press
      default: []
      selector:
        action: {}
    on_button_3_short:
      name: On button 3 - short
      default: []
      selector:
        action: {}
    off_button_3_short:
      name: Off button 3 - short
      default: []
      selector:
        action: {}
    on_button_3_long:
      name: On button 3 - long press
      default: []
      selector:
        action: {}
    off_button_3_long:
      name: Off button 3 - long press
      default: []
      selector:
        action: {}
    on_button_4_short:
      name: On button 4 - short
      default: []
      selector:
        action: {}
    off_button_4_short:
      name: Off button 4 - short
      default: []
      selector:
        action: {}
    on_button_4_long:
      name: On button 4 - long press
      default: []
      selector:
        action: {}
    off_button_4_long:
      name: Off button 4 - long press
      default: []
      selector:
        action: {}
    s1_button_short:
      name: S1 button - short
      default: []
      selector:
        action: {}
    s2_button_short:
      name: S2 button - short
      default: []
      selector:
        action: {}
    s1_button_long:
      name: S1 button - long press
      default: []
      selector:
        action: {}
    s2_button_long:
      name: S2 button - long press
      default: []
      selector:
        action: {}
mode: parallel
max_exceeded: silent
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input remote
action:
- variables:
    button: '{{ trigger.event.data.endpoint_id }}'
    cmd: '{{ trigger.event.data.command }}'
- choose:
  - conditions:
    - '{{ button == 1 and cmd == ''on'' }}'
    sequence: !input on_button_1_short
  - conditions:
    - '{{ button == 1 and cmd == ''off'' }}'
    sequence: !input off_button_1_short
  - conditions:
    - '{{ button == 1 and cmd == ''move_with_on_off'' }}'
    sequence:
    - variables:
        mode: '{{ trigger.event.data.params.move_mode }}'
    - if:
      - condition:
        - '{{ mode == "MoveMode.Up" }}'
      then: !input on_button_1_long
      else: !input off_button_1_long
  - conditions:
    - '{{ button == 2 and cmd == ''on'' }}'
    sequence: !input on_button_2_short
  - conditions:
    - '{{ button == 2 and cmd == ''off'' }}'
    sequence: !input off_button_2_short
  - conditions:
    - '{{ button == 2 and cmd == ''move_with_on_off'' }}'
    sequence:
    - variables:
        mode: '{{ trigger.event.data.params.move_mode }}'
    - if:
      - condition:
        - '{{ mode == "MoveMode.Up" }}'
      then: !input on_button_2_long
      else: !input off_button_2_long
  - conditions:
    - '{{ button == 3 and cmd == ''on'' }}'
    sequence: !input on_button_3_short
  - conditions:
    - '{{ button == 3 and cmd == ''off'' }}'
    sequence: !input off_button_3_short
  - conditions:
    - '{{ button == 3 and cmd == ''move_with_on_off'' }}'
    sequence:
    - variables:
        mode: '{{ trigger.event.data.params.move_mode }}'
    - if:
      - condition:
        - '{{ mode == "MoveMode.Up" }}'
      then: !input on_button_3_long
      else: !input off_button_3_long
  - conditions:
    - '{{ button == 4 and cmd == ''on'' }}'
    sequence: !input on_button_4_short
  - conditions:
    - '{{ button == 4 and cmd == ''off'' }}'
    sequence: !input off_button_4_short
  - conditions:
    - '{{ button == 4 and cmd == ''move_with_on_off'' }}'
    sequence:
    - variables:
        mode: '{{ trigger.event.data.params.move_mode }}'
    - if:
      - condition:
        - '{{ mode == "MoveMode.Up" }}'
      then: !input on_button_4_long
      else: !input off_button_4_long
  - conditions:
    - '{{ button == 1 and cmd == "recall" }}'
    sequence:
    - variables:
        sbutton: '{{ trigger.event.data.params.scene_id }}'
    - if:
      - condition:
        - '{{ sbutton == 1 }}'
      then: !input s1_button_short
      else: !input s2_button_short
  - conditions:
    - '{{ button == 1 and cmd == "store" }}'
    sequence:
    - variables:
        sbutton: '{{ trigger.event.data.params.scene_id }}'
    - if:
      - condition:
        - '{{ sbutton == 1 }}'
      then: !input s1_button_long
      else: !input s2_button_long
